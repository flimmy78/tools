#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
# Use CDROM installation media
# Root password
rootpw --iscrypted $1$ZsUjSdWQ$kU4Y5T7HXBsOwdJbMgz2T0
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use graphical install
graphical
firstboot --disable
# System keyboard
keyboard us
# System language
lang en_US
# SELinux configuration
selinux --disabled
# Installation logging level
logging --level=info
# Reboot after installation
# System timezone
timezone  Asia/Shanghai
# Network information
#network  --bootproto=dhcp --device=eth0 --onboot=on
# System bootloader configuration
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel 
# Disk partitioning information
%include /tmp/partitions
install
cdrom
%pre
#!/bin/sh
DIR="/sys/block"
ROOTDRIVE=""
USBDRIVE=""
mkdir /tmp
for DEV in sda sdb sdc sdd sde hda hdb hdc hdd hde; do
  if [ -d $DIR/$DEV ]; then
      REMOVABLE=`cat $DIR/$DEV/removable`
      if (( $REMOVABLE == 0 )); then
        if [ -z $ROOTDRIVE ]; then
          ROOTDRIVE=$DEV
		  echo "get rootdrive"$ROOTDRIVE
        fi
      else
          USBDRIVE=`echo "${DEV}4"`
		  echo "get removable USBDDIVE"$USBDRIVE
      fi
  fi
done
# Check for RAID controller disks
if [ -z $ROOTDRIVE ]; then
  for DEV in c0d0 c0d1 c0d2 c1d0 c1d1 c1d2; do
    if [ -d $DIR/cciss!$DEV ]; then
      if [ -z $ROOTDRIVE ]; then
        ROOTDRIVE=cciss/$DEV
      fi
    fi
  done
fi
echo "bootloader --location=mbr --driveorder=$ROOTDRIVE" > /tmp/partitions
echo "part /boot --fstype="ext4" --size=100 --ondisk=$ROOTDRIVE" >> /tmp/partitions
echo "part swap --fstype="swap" --size=1000 --ondisk=$ROOTDRIVE" >> /tmp/partitions
echo "part / --fstype="ext4" --grow --size=100 --ondisk=$ROOTDRIVE" >> /tmp/partitions
%post --log=/root/kickstart-post.log
set -x
DIR="/sys/block"
ROOTDRIVE=""
USBDRIVE=""
for DEV in sda sdb sdc sdd sde hda hdb hdc hdd hde; do
  if [ -d $DIR/$DEV ]; then
      REMOVABLE=`cat $DIR/$DEV/removable`
      if (( $REMOVABLE == 0 )); then
        if [ -z $ROOTDRIVE ]; then
          ROOTDRIVE=$DEV
                  echo "get rootdrive"$ROOTDRIVE
        fi
      else
          USBDRIVE=`echo "${DEV}4"`
                  echo "get removable USBDDIVE "$USBDRIVE
      fi
  fi
done
# Check for RAID controller disks
if [ -z $ROOTDRIVE ]; then
  for DEV in c0d0 c0d1 c0d2 c1d0 c1d1 c1d2; do
    if [ -d $DIR/cciss!$DEV ]; then
      if [ -z $ROOTDRIVE ]; then
        ROOTDRIVE=cciss/$DEV
      fi
    fi
  done
fi

echo "ZhiCloud" >> /etc/centos-release
sed -i 's/CentOS release 6.4 (Final)/ZhiCloud/g' /etc/issue
sed -i 's/CentOS release 6.4 (Final)/ZhiCloud/g' /etc/issue.net 
sed -i 's/localhost.localdomain/ZhiCloud/g' /etc/sysconfig/network  

logfile="/var/log/zhicloud_install.log"

mkdir /home/zhicloud
[ -d /mnt/source ] || mkdir /mnt/source
mount /dev/cdrom /mnt/source
cp -a /mnt/source/zhicloud/. /home/zhicloud/
echo "mount file directory success" >> $logfile

mv /home/zhicloud/lib/libstdc++.so.6.0.20 /usr/lib64
rm -rf /usr/lib64/libstdc++.so.6
ln -s /usr/lib64/libstdc++.so.6.0.20 /usr/lib64/libstdc++.so.6
echo "link libstdc++ library success" >> $logfile

##install libvirt
cd /home/zhicloud/installscript
sh installlibvirt
##install qemu

##install nbd
mv /home/zhicloud/lib/nbd.ko /lib/modules/$(uname -r)/kernel/drivers/block/
echo "depmod -a"
echo "depmod -a" >> $logfile
depmod -a >> $logfile

echo "modprobe nbd" >> $logfile
modprobe nbd >> $logfile

echo "lsmod|grep nbd" >> $logfile
lsmod|grep nbd >> $logfile

cd /home/zhicloud/installscript
sh installndb

rpm -e mysql-libs-5.1.66-2.el6_3.x86_64 --nodeps
cd /home/zhicloud/rpm
rpm -ivh *.rpm
cd /home/zhicloud/package
rpm -ivh jdk-7u79-linux-x64.rpm
rpm -ivh MySQL-server-5.6.26-1.el6.i686.rpm
rpm -ivh MySQL-client-5.6.26-1.el6.i686.rpm

#service mysql start
#cd /home/zhicloud/lib/
#sh init.sh

#mysql_secret=$(awk '/password/{print $NF}' /root/.mysql_secret)  
#mysql -uroot -p$mysql_secret < /home/zhicloud/lib/init.sql

cd /home/zhicloud/package
rpm -e qemu-img-0.12.1.2-2.415.el6_5.10.x86_64 --nodeps
rpm -e libcacard-devel-0.15.0-2.el6.x86_64 --nodeps
rpm -e qemu-kvm-0.12.1.2-2.415.el6_5.10.x86_64 --nodeps
rpm -ivh yasm-1.2.0-1.x86_64.rpm
rpm -ivh x264-2.0.0-1.x86_64.rpm
tar -zxvf pyparsing-2.0.1.tar.gz
cd pyparsing-2.0.1
python setup.py install
cd /home/zhicloud/package
rpm -ivh ffmpeg-2.7.1-1.x86_64.rpm
rpm -ivh spice-0.12.5-1.x86_64.rpm
rpm -ivh usbredir-0.7-1.x86_64.rpm
rpm -ivh qemu-2.3.0-1.x86_64.rpm

#service libvirtd start
#cd /etc/selinux/targeted/modules
#audit2allow -M mydnsmasq -i /var/log/audit/audit.log
#semodule -i mydnsmasq.pp

cd /home/zhicloud/installscript
sh replace_nic.sh

cat /etc/rc.d/rc.local > /home/zhicloud/rc.local.cache

echo "service mysql start" >> /etc/rc.d/rc.local
echo "sh /home/zhicloud/lib/init.sh" >> /etc/rc.d/rc.local
echo "chkconfig NetworkManager off" >> /etc/rc.d/rc.local
echo "chkconfig network on" >> /etc/rc.d/rc.local
echo "service NetworkManager stop" >> /etc/rc.d/rc.local
echo "service network start" >> /etc/rc.d/rc.local
echo "ifup eth0" >> /etc/rc.d/rc.local
echo "ifup em1" >> /etc/rc.d/rc.local
echo "service libvirtd start" >> /etc/rc.d/rc.local
echo "/usr/local/lib" >> /etc/ld.so.conf
echo "ldconfig" >> /etc/rc.d/rc.local
echo "python /home/zhicloud/installscript/autostart.py" >> /etc/rc.d/rc.local

\cp -f /home/zhicloud/installscript/custom.conf /etc/gdm/
mkdir -p /root/.config/autostart
\cp -f /home/zhicloud/installscript/python.desktop /root/.config/autostart
find /home/zhicloud -type f -name "TRANS.TBL" | xargs rm -rf {}\;
#eject 
#eject -t
reboot
%end

